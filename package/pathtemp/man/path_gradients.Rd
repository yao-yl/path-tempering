% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gradient.R
\name{path_gradients}
\alias{path_gradients}
\title{Extract pointwise gradient for path sampling}
\usage{
path_gradients(a_lower = 0.1, a_upper = 0.8, b, K_logit, mu_logit,
  sigma_logit, K_gaussian, mu_gaussian, sigma_gaussian, a, log_lik)
}
\arguments{
\item{a_lower}{The lower bound of the quadrature. When a < a_lower, the inverse
temperature  is 0 and the sample is from the base.}

\item{a_upper}{The upper bound of the quadrature. When a > a_upper, the inverse
temperature  is 1 and the sample is from the target.}

\item{b}{The current parameterization of the pseudo prior.}

\item{K_logit}{An integer, the length of the logit kernels.}

\item{mu_logit}{The location of logit kernels.}

\item{sigma_logit}{The width of logit kernels.}

\item{K_gaussian}{An integer, the length of the Gaussian kernels.}

\item{mu_gaussian}{The location of Gaussian kernels.}

\item{sigma_gaussian}{The width of Gaussian kernels.}

\item{a}{All sampled transformed parameters}

\item{log_lik}{the pointwise log density difference between two models}
}
\value{
Names list of u_prior, u_lik, and u_post: the gradient of log pseudo prior,
log normalization constant, and the log marginal density. These list can be used in
nest adaptation in \code{\link{path_quadrature}}.
}
\description{
Compute the pointwise gradient for path sampling, including the gradient of
log normalization constant and the log marginal density.
}
\details{
The function use numerical quadrature using trapezoid rule to compute
the normalization constant from its potinwise gradient \code{u}. For the gradient of
the log normalization constant, the gradient is the sum of the log deritive of lambda,
and the pointwise log density difference between two models. For the gradient of
the log marginal density, the gradient is the sum of the previous two terms and the
gradient of log pseudo prior.

For current implementations, all these gradients terms have closed form.
}
\seealso{
\code{\link{path_quadrature}}
}
