% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pathsample.R
\name{path_sample}
\alias{path_sample}
\title{Adaptive path sampling}
\usage{
path_sample(sampling_model, data_list, visualize_progress = FALSE,
  N_loop = 10, max_sample_store = 4000, a_lower = 0.1,
  a_upper = 0.8, K_logit = 20, K_gaussian = 20, N_grid = 100,
  thin = 2, iter = 2000, max_treedepth = 10, iter_final = 4000)
}
\arguments{
\item{sampling_model}{The stan model generated from \code{\link{code_temperature_augmented}}.}

\item{data_list}{The list of data used in the original stan model.}

\item{visualize_progress}{whether to visualize the progress.}

\item{N_loop}{The max adaptations. The default is 10.}

\item{max_sample_store}{The max sample to store from previous adaptaions. The default is
4000.}

\item{a_lower}{The lower bound of the quadrature. When a < a_lower, the inverse
temperature  is 0 and the sample is from the base.}

\item{a_upper}{The upper bound of the quadrature. When a > a_upper, the inverse
temperature  is 1 and the sample is from the target.}

\item{K_logit}{An integer, the length of the logit kernels. The default is 20.}

\item{K_gaussian}{An integer, the length of the Gaussian kernels. The default is 20.}

\item{N_grid}{The number of internal interpolations in parametric estimation
The default is 100.}

\item{thin}{The number of thining for the augmented stan program.}

\item{iter}{The number of iterations for the augmented stan program.}

\item{max_treedepth}{The max tree depth  for the augmented stan program. A smaller
max_treedepth may increase exploration. efficiency in early adaptations.}

\item{iter_final}{The number of iterations during the final adaptation.}
}
\value{
a \code{\link{path_fit}} object.
}
\description{
Run path sampling with adaptations.
}
\details{
The function fits one adaptations of path sampling with given
parameters and  pseudo priors that are specified by \code{b}. It runs the stan program,
run path sampling to compute the log normalization constants and log marginal,
and these two estimations with extra parametric regularization.
}
\examples{
\dontrun{
library(rstan)
rstan_options(auto_write = TRUE)
sampling_model=stan_model(file_new)
path_sample_fit=path_sample(sampling_model=sampling_model,
                            iter_final=6000, iter=2000,
                            data=list(gap=10), N_loop = 6,
                             visualize_progress = TRUE)
sim_cauchy=extract(path_sample_fit$fit_main)
in_target= sim_cauchy$lambda==1
in_prior = sim_cauchy$lambda==0
# sample from the target
hist(sim_cauchy$theta[in_target])
# sample from the base
hist(sim_cauchy$theta[in_prior])
plot(sim_cauchy$a, sim_cauchy$theta)
plot(g_lambda(path_sample_fit$path_post_a), path_sample_fit$path_post_z)
}


}
\seealso{
\code{\link{path_quadrature}}, \code{\link{path_gradients}}, \code{\link{path_fit}}.
}
